---
- hosts: newservers
  vars:
  - ubuntu_release: precise
  - user_password: '$6$AC3bdCF7!$Hr9sJNlvhPv51DwclPgOG8ym8WjPbo9/uoNCaNpb30jSAt3/qcLJolW1SyrZ4iEnJ3e14Z9O.0ioIcBm18pMy0'
    # crypted password, generated on a Linux box using:
    # echo 'import crypt,getpass; print crypt.crypt(getpass.getpass(), "$6$AC3bdCF7!")' | python -

  tasks:
  - name: Update APT package cache
    action: apt update_cache=yes

  - name: Run apt-get upgrade
    action: command apt-get upgrade -y

  - name: Install fail2ban
    action: apt pkg=fail2ban state=installed

  - name: Install etckeeper
    action: apt pkg=etckeeper state=installed

  - name: Install ufw
    action: apt pkg=ufw state=installed  

  - name: Add user
    action: user name=amatashkin password=$user_password

  - name: Add authorized deploy key
    action: authorized_key user=amatashkin key='$FILE(authorized_keys)'

  - name: Remove sudo group rights
    action: lineinfile dest=/etc/sudoers regexp="^%sudo" state=absent

  - name: Add deploy user to sudoers
    action: lineinfile dest=/etc/sudoers regexp="amatashkin ALL" line="amatashkin ALL=(ALL:ALL) ALL" state=present

  - name: Disallow root SSH access
    action: lineinfile dest=/etc/ssh/sshd_config regexp="^PermitRootLogin" line="PermitRootLogin no" state=present
    notify: Restart ssh

  - name: Disallow password authentication
    action: lineinfile dest=/etc/ssh/sshd_config regexp="^PasswordAuthentication" line="PasswordAuthentication no" state=present
    notify: Restart ssh

  - name: Install unattended-upgrades
    action: apt pkg=unattended-upgrades state=present
  
  - name: Adjust APT update intervals
    action: copy src=config/apt_periodic dest=/etc/apt/apt.conf.d/10periodic

  - name: Make sure unattended-upgrades only installs from $ubuntu_release-security
    action: lineinfile dest=/etc/apt/apt.conf.d/50unattended-upgrades regexp="$ubuntu_release-updates" state=absent

  handlers:
  - name: Restart ssh
    action: service name=ssh state=restarted
